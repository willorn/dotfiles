# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# 你可以用它来添加在登录到 macOS 用户会话后运行的命令。
# 'start-at-login' 需要设置为 'true' 才能使 'after-login-command' 生效
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# 你可以用它来添加在 AeroSpace 启动后运行的命令。
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# 在登录时启动 AeroSpace
start-at-login = true

# 规范化。见：https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# 可能的值：tiles|accordion
default-root-container-layout = 'tiles'

# 可能的值：horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# 可能的值：(qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# 鼠标跟随焦点当焦点显示器改变时
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# 窗口之间的间距（inner-*）和显示器边缘之间的间距（outer-*）。
# 可能的值：
# - 常量：     gaps.outer.top = 8
# - 每个显示器：  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 0
inner.vertical =   0
outer.left =       0
outer.bottom =     0
outer.top =        0
outer.right =      0

# 'main' 绑定模式声明
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

#   可能的键值：
# - 字母。        a, b, c, ..., z
# - 数字。        0, 1, 2, ..., 9
# - 钥盘数字。 keypad0, keypad1, keypad2, ..., keypad9
# - F键。         f1, f2, ..., f20
# - 特殊键。   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# 可能的修饰键： cmd, alt, ctrl, shift
# 可能的命令： https://nikitabobko.github.io/AeroSpace/commands

# 你可以取消注释这一行来打开终端，使用 alt + enter 快捷键
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'

# 启动应用程序并切换到对应工作区的快捷键（使用 alt 键）
# Launch applications and switch to corresponding workspace shortcuts (using alt key)

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
# 快速布局切换快捷键 - Quick layout switching shortcuts
alt-slash = 'layout tiles horizontal vertical'  # 切换到平铺布局
alt-comma = 'layout accordion horizontal vertical'  # 切换到手风琴布局
alt-period = 'layout floating tiling'  # 在浮动和平铺之间切换

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-0 = 'workspace 0'
alt-1 = 'workspace 1'
alt-2 = ['exec-and-forget open -a "Cherry Studio"', 'workspace 2'] # 启动 Cherry Studio 并切换到工作区 2
alt-3 = 'workspace 3'
alt-4 = 'workspace 4'
alt-5 = 'workspace 5'
alt-6 = 'workspace 6'
alt-7 = ['exec-and-forget open -a "Trae"', 'workspace 7'] # 启动 Trae 并切换到工作区 7
alt-8 = ['exec-and-forget open -a "WebStorm"', 'workspace 8'] # 启动 WebStorm 并切换到工作区 8
alt-9 = ['exec-and-forget open -a "Apifox"', 'workspace 9'] # 启动 Apifox 并切换到工作区 9
# alt-a = 'workspace A'
alt-b = 'workspace B'
# alt-c = 'workspace C'
# alt-d = 'workspace D'
# alt-e = 'workspace E'
# alt-f = 'workspace F'
# alt-g = 'workspace G'
# alt-i = 'workspace I'
# alt-m = 'workspace M'
alt-n = ['exec-and-forget open -a "Obsidian"', 'workspace N'] # 启动 Obsidian 并切换到工作区 N
# alt-o = 'workspace O'
# alt-p = 'workspace P'
# alt-q = 'workspace Q'
# alt-r = 'workspace R'
# alt-s = 'workspace S'

# terminal, video, notes, browser, mail, 
# alt-t = 'workspace T'
# alt-u = 'workspace U'
# alt-v = 'workspace V'
alt-w = 'workspace W'
# alt-x = 'workspace X'
# alt-y = 'workspace Y'
# alt-z = 'workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-0 = 'move-node-to-workspace 0' # Move to Apifox workspace
alt-shift-1 = ['move-node-to-workspace 1', 'workspace 1']
alt-shift-2 = 'move-node-to-workspace 2' # Move to Cherry Studio workspace
alt-shift-3 = 'move-node-to-workspace 3'
alt-shift-4 = 'move-node-to-workspace 4'
alt-shift-5 = 'move-node-to-workspace 5'
alt-shift-6 = 'move-node-to-workspace 6'
alt-shift-7 = 'move-node-to-workspace 7'
alt-shift-8 = 'move-node-to-workspace 8' # Move to Trae workspace
alt-shift-9 = 'move-node-to-workspace 9' # Move to JetBrains IDEs workspace
alt-shift-a = 'move-node-to-workspace A'
alt-shift-b = 'move-node-to-workspace B' # for Browser
alt-shift-n = 'move-node-to-workspace N'  # for Notes
alt-shift-t = 'move-node-to-workspace T' # for Terminal
alt-shift-c = 'move-node-to-workspace C' # for Coding 
# alt-shift-d = 'move-node-to-workspace D'
# alt-shift-e = 'move-node-to-workspace E'
# alt-shift-f = 'move-node-to-workspace F'
# alt-shift-g = 'move-node-to-workspace G'
# alt-shift-i = 'move-node-to-workspace I'
# alt-shift-m = 'move-node-to-workspace M'
# alt-shift-o = 'move-node-to-workspace O'
# alt-shift-p = 'move-node-to-workspace P'
# alt-shift-q = 'move-node-to-workspace Q'
# alt-shift-r = 'move-node-to-workspace R'
# alt-shift-s = 'move-node-to-workspace S'
# alt-shift-u = 'move-node-to-workspace U'
# alt-shift-v = 'move-node-to-workspace V'
alt-shift-w = 'move-node-to-workspace W'  # 禁用微信工作区移动快捷键以防止意外移动
# alt-shift-x = 'move-node-to-workspace X'
# alt-shift-y = 'move-node-to-workspace Y'
# alt-shift-z = 'move-node-to-workspace Z'


# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

# 微信配置 - 所有微信窗口都浮动显示并移动到W工作区
# WeChat configuration - all WeChat windows float and move to W workspace
[[on-window-detected]]
if.app-id = 'com.tencent.xinWeChat'
run = ['layout floating', 'move-node-to-workspace W']

# JetBrains IDEs 自动分配到工作区 8
# JetBrains IDEs auto-assignment to workspace 8

# 通过应用名称匹配所有 JetBrains 应用（更简洁的方式）
# Match all JetBrains applications by app name (more concise approach)
[[on-window-detected]]
if.app-name-regex-substring = '(WebStorm|IntelliJ IDEA|PyCharm|PhpStorm|RubyMine|CLion|GoLand|DataGrip|Rider|Fleet|RustRover)'
run = 'move-node-to-workspace 8'

# Android Studio (Google 开发，但常与 JetBrains IDEs 一起使用)
# Android Studio (developed by Google, but commonly used with JetBrains IDEs)
[[on-window-detected]]
if.app-id = 'com.google.android.studio'
run = 'move-node-to-workspace 8'

# Apifox 自动分配到工作区 9
# Apifox auto-assignment to workspace 9
[[on-window-detected]]
if.app-name-regex-substring = 'Apifox'
run = 'move-node-to-workspace 9'

# Trae 相关应用自动分配到工作区 7
# Trae related applications auto-assignment to workspace 7
[[on-window-detected]]
if.app-name-regex-substring = '(Trae|trae)'
run = 'move-node-to-workspace 7'

# Cherry Studio 自动分配到工作区 2
# Cherry Studio auto-assignment to workspace 2
[[on-window-detected]]
if.app-name-regex-substring = 'Cherry Studio'
run = 'move-node-to-workspace 2'

# Obsidian 自动分配到工作区 N
# Obsidian auto-assignment to workspace N
[[on-window-detected]]
if.app-name-regex-substring = 'Obsidian'
run = 'move-node-to-workspace N'

# 默认浮动应用配置 - 让常见应用默认使用浮动模式
# Default floating applications - make common apps use floating mode by default

# 系统应用和工具类应用默认浮动
# System apps and utility apps default to floating
[[on-window-detected]]
if.app-name-regex-substring = '(Finder|System Preferences|System Settings|Activity Monitor|Console|Disk Utility|Terminal|Calculator|Calendar|Contacts|FaceTime|Photo Theater|Photos|Music|TV|Podcasts|Books|News|Stocks|Weather|Clock mini|CleanMyMac|AppCleaner|The Unarchiver|Archive Utility|Preview|QuickTime Player|VLC|IINA|Keka|BetterZip|1Blocker|AdGuard|Little Snitch|Bartender|CleanMaster|DaisyDisk|Gemini|Duplicate Cleaner|PDF Squeezer)'
run = 'layout floating'

# 浏览器和通讯应用默认浮动（除了微信主窗口）
# Browsers and communication apps default to floating (except WeChat main window)
[[on-window-detected]]
if.app-name-regex-substring = '(Safari|Chrome|Firefox|Edge|Arc|Brave|Opera|Telegram|Discord|Slack|Zoom|Teams|Skype|QQ|DingTalk|Lark|Feishu)'
run = 'layout floating'

# 设计和创意应用默认浮动
# Design and creative apps default to floating
[[on-window-detected]]
if.app-name-regex-substring = '(Photoshop|Illustrator|InDesign|After Effects|Premiere Pro|Final Cut Pro|Motion|Compressor|Logic Pro|GarageBand|Sketch|Figma|Adobe XD|Canva|Pixelmator|Affinity|Blender|Cinema 4D|Maya|3ds Max)'
run = 'layout floating'

# 办公应用默认浮动
# Office apps default to floating
[[on-window-detected]]
if.app-name-regex-substring = '(Microsoft Word|Microsoft Excel|Microsoft PowerPoint|Microsoft Outlook|Pages|Numbers|Keynote|LibreOffice|OpenOffice|WPS Office|Notion|Evernote|Bear|Typora|MacDown|Marked|MindNode|XMind|OmniGraffle|OmniPlan|OmniOutliner)'
run = 'layout floating'

# 网络工具和代理应用默认浮动
# Network tools and proxy apps default to floating
[[on-window-detected]]
if.app-name-regex-substring = '(FlClash|Clash|ClashX|ClashX Pro|Surge|Shadowrocket|V2rayU|V2RayX|Proxyman|Charles|Wireshark|Network Radar|WiFi Explorer|NetNewsWire|Reeder|Mail|Airmail|Spark|Canary Mail|Mimestream)'
run = 'layout floating'

# 开发辅助工具默认浮动
# Development auxiliary tools default to floating
[[on-window-detected]]
if.app-name-regex-substring = '(Postman|Insomnia|Paw|RapidAPI|HTTPie|REST Client|API Tester|Simulator|Xcode Simulator|Android Emulator|Docker Desktop|Kubernetes Dashboard|TablePlus|Sequel Pro|DB Browser|MongoDB Compass|Redis Desktop Manager|Robo 3T)'
run = 'layout floating'

# 🚫 彻底解决平铺问题 - 通用浮动规则 🚫
# 🚫 Complete solution for tiling issues - Universal floating rule 🚫

# 让所有应用默认浮动（除了极少数特殊情况）
# Make all applications default to floating (except for very few special cases)
[[on-window-detected]]
if.app-name-regex-substring = '.*'
run = 'layout floating'

# 注意：这个通用规则会让所有应用都浮动
# 如果您希望某些特定应用使用平铺模式，可以在上面添加更具体的规则
# Note: This universal rule will make all apps floating
# If you want specific apps to use tiling, add more specific rules above
